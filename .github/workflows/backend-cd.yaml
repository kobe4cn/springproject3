name: CD - Deploy Backend
#环境名称：spring3api-env
#应用名称：spring3-api

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # Provide the password for postgres
        env:
          POSTGRES_USER: kevin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        #工作目录
        working-directory: ./backend
    steps:
      #checkout main分支
      - uses: actions/checkout@v3
      - name: Slack 消息
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":":github: https://github.com/kobe4cn/springproject3/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: 准备开始编译打包镜像
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Deployment started :progress_bar: :fingerscrossed:"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      #设置java和maven环境
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'
          cache: 'maven'
      - name: 登陆docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 设置版本号
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":maven: Building with Maven"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: 使用maven 验证打包，同时设置pom.xml文件里面docker.image.tag属性，以便jib推送docker的时候使用
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":docker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to https://hub.docker.com/repository/docker/kobe4cn/springboot3-api"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: 更新Dockerrun.aws.json文件中的image拉取版本号
        run: | 
          echo "更新Dockerrun.aws.json 前"
          cat ../../Dockerrun.aws.json
          echo "开始更新dockerrun文件"
          sed -i -E 's_(kobe4cn/springboot3-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../../Dockerrun.aws.json
          echo "更新完dockerrun文件"
          cat ../../Dockerrun.aws.json
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":aws: Starting deployment to Elastic Beanstalk"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: 部署Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":githubloading: Committing to repo https://github.com/kobe4cn/springproject3/"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: 提交Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ../../Dockerrun.aws.json
          git commit -m "更新 Dockerrun.aws.json docker image tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push
      - name: Send Slack Message
        run: >
            curl -X POST -H 'Content-type: application/json' 
            --data '{"text":"Deployment and commit completed :github-check-mark: :party_blob: - http://Spring3api-env.eba-5mdrkfvk.ap-northeast-1.elasticbeanstalk.com/"}' 
            ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        if: always()
        run: >
            curl -X POST -H 'Content-type: application/json' 
            --data '{"text":"Job Status ${{ job.status }}"}' 
            ${{ secrets.SLACK_WEBHOOK_URL }}